/*! minireset.css v0.0.7 | MIT License | github.com/jgthms/minireset.css */
html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

ul {
  list-style: none;
}

button,
input,
select {
  margin: 0;
}

html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}

img,
video {
  height: auto;
  max-width: 100%;
}

iframe {
  border: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
 * ========================================================================== */
/**
 * * 1. Correct the line height in all browsers.
 * * 2. Prevent adjustments of font size after orientation changes in iOS.
 * */
html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

/* Sections
 * ========================================================================== */
/**
 * * Remove the margin in all browsers.
 * */
body {
  margin: 0;
}

/**
 * * Render the `main` element consistently in IE.
 * */
main {
  display: block;
}

/* Grouping content
 * ========================================================================== */
/**
 * * 1. Add the correct box sizing in Firefox.
 * * 2. Show the overflow in Edge and IE.
 * */
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

/**
 * * 1. Correct the inheritance and scaling of font size in all browsers.
 * * 2. Correct the odd `em` font sizing in all browsers.
 * */
pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Text-level semantics
 * ========================================================================== */
/**
 * * Remove the gray background on active links in IE 10.
 * */
a {
  background-color: transparent;
}

/**
 * * 1. Remove the bottom border in Chrome 57-
 * * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 * */
abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
 * * Add the correct font weight in Chrome, Edge, and Safari.
 * */
b,
strong {
  font-weight: bolder;
}

/**
 * * 1. Correct the inheritance and scaling of font size in all browsers.
 * * 2. Correct the odd `em` font sizing in all browsers.
 * */
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/**
 * * Add the correct font size in all browsers.
 * */
small {
  font-size: 80%;
}

/**
 * * Prevent `sub` and `sup` elements from affecting the line height in
 * * all browsers.
 * */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
 * ========================================================================== */
/**
 * * Remove the border on images inside links in IE 10.
 * */
img {
  border-style: none;
}

/* Forms
 * ========================================================================== */
/**
 * * 1. Change the font styles in all browsers.
 * * 2. Remove the margin in Firefox and Safari.
 * */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

/**
 * * Show the overflow in IE.
 * * 1. Show the overflow in Edge.
 * */
button,
input {
  overflow: visible;
}

/**
 * * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * * 1. Remove the inheritance of text transform in Firefox.
 * */
button,
select {
  text-transform: none;
}

/**
 * * Remove the inner border and padding in Firefox.
 * */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * * Restore the focus styles unset by the previous rule.
 * */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * * 1. Correct the text wrapping in Edge and IE.
 * * 2. Correct the color inheritance from `fieldset` elements in IE.
 * * 3. Remove the padding so developers are not caught out when they zero out
 * *    `fieldset` elements in all browsers.
 * */
legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

/**
 * * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 * */
progress {
  vertical-align: baseline;
}

/**
 * * Remove the default vertical scrollbar in IE 10+.
 * */
textarea {
  overflow: auto;
}

/**
 * * 1. Add the correct box sizing in IE 10.
 * * 2. Remove the padding in IE 10.
 * */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  padding: 0;
}

/**
 * * Correct the cursor style of increment and decrement buttons in Chrome.
 * */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * * 1. Correct the odd appearance in Chrome and Safari.
 * * 2. Correct the outline style in Safari.
 * */
[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

/**
 * * Remove the inner padding in Chrome and Safari on macOS.
 * */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * * 1. Correct the inability to style clickable types in iOS and Safari.
 * * 2. Change font properties to `inherit` in Safari.
 * */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

/* Interactive
 * ========================================================================== */
/* * Add the correct display in Edge, IE 10+, and Firefox.
 * */
details {
  display: block;
}

/* * Add the correct display in all browsers.
 * */
summary {
  display: list-item;
}

/* Misc
 * ========================================================================== */
/**
 * * Add the correct display in IE 10+.
 * */
template {
  display: none;
}

a {
  cursor: pointer;
  text-decoration: none;
  -webkit-hyphens: auto;
          hyphens: auto;
  margin: 0;
  word-break: break-word;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
a:-moz-any-link {
  color: currentColor;
}
a strong, a:any-link {
  color: currentColor;
}
a:hover {
  color: var(--bal-link-hover-color);
}
a:active {
  color: var(--bal-link-active-color);
}

p {
  -webkit-hyphens: auto;
          hyphens: auto;
  margin: 0;
  word-break: break-word;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
p strong {
  color: currentColor;
}
p:not(:last-child) {
  margin-bottom: var(--bal-space-normal);
}
@media screen and (min-width: 769px), print {
  p:not(:last-child) {
    margin-bottom: var(--bal-space-tablet-normal);
  }
}
@media screen and (min-width: 1024px) {
  p:not(:last-child) {
    margin-bottom: var(--bal-space-desktop-normal);
  }
}

hr {
  background-color: var(--bal-divider-background);
  border: none;
  display: block;
  height: var(--bal-border-width-normal);
  margin-top: var(--bal-space-xx-large);
  margin-bottom: var(--bal-space-xx-large);
}
@media screen and (min-width: 769px), print {
  hr {
    margin-top: var(--bal-space-tablet-xx-large);
    margin-bottom: var(--bal-space-tablet-xx-large);
  }
}
@media screen and (min-width: 1024px) {
  hr {
    margin-top: var(--bal-space-desktop-xx-large);
    margin-bottom: var(--bal-space-desktop-xx-large);
  }
}

html {
  background-color: var(--bal-body-background);
  font-size: var(--bal-body-font-size);
  min-width: 300px;
  overflow-x: hidden;
  overflow-y: scroll;
  text-rendering: optimizeLegibility;
  -webkit-text-size-adjust: 100%;
     -moz-text-size-adjust: 100%;
          text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: transparent;
  -webkit-overflow-scrolling: auto;
}

*:focus {
  -webkit-tap-highlight-color: transparent;
  outline: none;
  touch-action: manipulation;
}

article,
aside,
figure,
footer,
header,
hgroup,
section {
  display: block;
}

body,
button,
input,
optgroup,
select,
textarea {
  font-family: var(--bal-body-font-family);
}

button {
  color: var(--bal-body-color);
}

body {
  color: var(--bal-body-color);
  font-size: var(--bal-body-font-size);
  font-weight: var(--bal-body-font-weight);
  line-height: var(--bal-body-line-height);
  -webkit-overflow-scrolling: auto;
}

img {
  height: auto;
  max-width: 100%;
}

input[type=checkbox],
input[type=radio] {
  vertical-align: baseline;
}

small {
  font-size: var(--bal-small-font-size);
}

span {
  font-style: inherit;
  font-weight: inherit;
}

b,
strong {
  color: inherit;
  font-weight: var(--bal-strong-font-weight);
}

fieldset {
  border: none;
}

@font-face {
  font-family: BaloiseCreateHeadline;
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("BaloiseCreateHeadline"), local("BaloiseCreateHeadline-bold"), url("https://www.baloise.ch/app-integration/assets/fonts/BaloiseCreateHeadline-bold.woff2") format("woff2"), url("https://www.baloise.ch/app-integration/assets/fonts/BaloiseCreateHeadline-bold.woff") format("woff");
}
@font-face {
  font-family: BaloiseCreateHeadline;
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: local("BaloiseCreateHeadline-light"), url("https://www.baloise.ch/app-integration/assets/fonts/BaloiseCreateHeadline-light.woff2") format("woff2"), url("https://www.baloise.ch/app-integration/assets/fonts/BaloiseCreateHeadline-light.woff") format("woff");
}
@font-face {
  font-family: BaloiseCreateText;
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local("BaloiseCreateText-bold"), url("https://www.baloise.ch/app-integration/assets/fonts/BaloiseCreateText-bold.woff2") format("woff2"), url("https://www.baloise.ch/app-integration/assets/fonts/BaloiseCreateText-bold.woff") format("woff");
}
@font-face {
  font-family: BaloiseCreateText;
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local("BaloiseCreateText"), local("BaloiseCreateText-regular"), url("https://www.baloise.ch/app-integration/assets/fonts/BaloiseCreateText-regular.woff2") format("woff2"), url("https://www.baloise.ch/app-integration/assets/fonts/BaloiseCreateText-regular.woff") format("woff");
}

/*# sourceMappingURL=data:application/json;base64, */