name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  Publish:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git Identity
        run: |
          git config --global user.name 'baopso'
          git config --global user.email 'Group.CH_Open-Source@baloise.ch'
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Update npm registry
        run: npm run registry

      - name: Install dependencies
        run: npm install

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
        env:
          HUSKY_DISABLED: 1
          BAL_DS_RELEASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Echo Changeset output
        run: |
          echo "Changeset published - ${{ steps.changesets.outputs.published }}"
          echo "Changeset publishedPackages - ${{ steps.changesets.outputs.publishedPackages }}"
          echo "Changeset hasChangesets - ${{ steps.changesets.outputs.hasChangesets }}"
          echo "Changeset pullRequestNumber - ${{ steps.changesets.outputs.pullRequestNumber }}"

      - name: Update lock file
        if: steps.changesets.outputs.published == 'true'
        run: npm install

      - name: Commit lock file
        if: steps.changesets.outputs.published == 'true'
        uses: EndBug/add-and-commit@v9
        with:
          add: 'package-lock.json'
          message: 'chore(): update lock file'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag release
        if: steps.changesets.outputs.published == 'true'
        uses: thejeff77/action-push-tag@v1.0.0
        with:
          tag: 'v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}'
          message: 'v${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}'

      - name: Merge main -> production
        if: steps.changesets.outputs.published == 'true'
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: main
          target_branch: production
          message: ':bookmark: release: ${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Declare some variables
        if: steps.changesets.outputs.published == 'true'
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Set up QEMU
        if: steps.changesets.outputs.published == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: steps.changesets.outputs.published == 'true'
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: steps.changesets.outputs.published == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: steps.changesets.outputs.published == 'true'
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: baloise/design-system-docs:${{ steps.vars.outputs.sha_short }},baloise/design-system-docs:latest

      - name: Deploy
        if: steps.changesets.outputs.published == 'true'
        uses: addnab/docker-run-action@v3
        with:
          image: baloise/gitopscli:5.4.0
          run: |
            gitopscli deploy \
            --git-provider-url https://github.com \
            --username ${{ secrets.INCUBATOR_GITHUB_USER }} \
            --password ${{ secrets.INCUBATOR_GITHUB_TOKEN }} \
            --git-user "Baloise Incubator" \
            --git-email "incubator@baloise.dev" \
            --organisation "baloise-incubator" \
            --repository-name "okd4-example-apps" \
            --file "baloise-design-system-docs-test/values.yaml" \
            --values "{designsystem.image.tag: ${{ steps.vars.outputs.sha_short }}}"
